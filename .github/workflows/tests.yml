name: Mautic tests and validations

on:
  push:
    branches:
      - '[0-9].*'
  pull_request:
  merge_group:
  schedule:
    # Run every day at 10:45 AM UTC to discover potential issues with dependencies like PHP updates etc.
    - cron: '45 10 * * *'

jobs:
  phpunit:
    # We don't want the scheduled jobs to run on forks of Mautic
    if: (github.event_name == 'schedule' && (github.repository == 'mautic/mautic' || github.repository == 'mautic/api-library') ) || (github.event_name != 'schedule')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.0', '8.1']
        db-types: ['mysql', 'mariadb']

    name: PHPUnit ${{ matrix.php-versions }} ${{ matrix.db-types }}

    services:
      database:
        image: ${{ matrix.db-types == 'mysql' && 'mysql:5.7' || 'mariadb:10.3' }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: >-
          --shm-size=2gb
          --name=${{ matrix.db-types }}
          --tmpfs=/var/lib/mysql
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    - uses: actions/checkout@v3
      # Codecov needs access to previous commits, so we add fetch-depth: 0
      with:
        fetch-depth: 0

    - name: PHPUnit cache
      if: ${{matrix.php-versions == '8.1' && matrix.db-types == 'mariadb'}}
      uses: actions/cache@v3
      with:
        path: ./var/cache/phpunit
        key: ${{ runner.os }}-phpunit-${{ hashFiles('**/composer.lock') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-phpunit-${{ hashFiles('**/composer.lock') }}
          ${{ runner.os }}-phpunit-

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: pcov
        ini-values: pcov.enabled=0, pcov.directory=., pcov.exclude="~tests|themes|vendor~"

    - name: add MySQL config file
      run: |
        mysqldump --version
        mysqldump --print-defaults
        cp .github/ci-files/.my.cnf ~/.my.cnf
        mysqldump --print-defaults

    - name: Set SYMFONY_ENV to test
      run: |
        echo "SYMFONY_ENV=test" >> $GITHUB_ENV
        echo "MAUTIC_ENV=test" >> $GITHUB_ENV

    - name: Install dependencies
      # composer install cache - https://github.com/ramsey/composer-install
      uses: "ramsey/composer-install@v2"

    - name: Run tests - database = ${{ matrix.db-types }}
      run: |
        rm -rf var/cache
        export DB_PORT="${{ job.services.database.ports[3306] }}"

        if [[ "${{ matrix.php-versions }}" == "8.1" ]] && [[ "${{ matrix.db-types }}" == "mariadb" ]]; then
          php -d pcov.enabled=1 bin/phpunit -d memory_limit=1G --bootstrap vendor/autoload.php --configuration app/phpunit.xml.dist --coverage-clover=coverage.xml --log-junit=junit.xml
        else
          composer test
        fi

    - name: Upload coverage report
      if: ${{ matrix.php-versions == '8.1' && matrix.db-types == 'mariadb' && github.repository == 'mautic/mautic' }}
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Save test results for future steps
      if: ${{ matrix.php-versions == '8.1' && matrix.db-types == 'mariadb' && github.repository == 'mautic/mautic' }}
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          ./junit.xml
          ./coverage.xml

    - name: Slack Notification if tests fail
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() && github.event_name == 'schedule' }}
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'The daily GitHub Actions tests in mautic/mautic have failed. Most likely something external has changed, like a PHP version update.'

    - name: Store log artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: logs-${{ matrix.php-versions }}-${{ matrix.db-types }}
        path: ./var/logs/*
