{% set item = item is defined ? item : null %}
{% set tooltip = tooltip is defined ? tooltip : null %}
{{ buttonReset(
    constant('Mautic\\CoreBundle\\Twig\\Helper\\ButtonHelper::LOCATION_PAGE_ACTIONS'),
    constant('Mautic\\CoreBundle\\Twig\\Helper\\ButtonHelper::TYPE_BUTTON_DROPDOWN'),
    item) }}
{{- include('@MauticCore/Helper/action_button_helper.html.twig') -}}

{# Workaround to get variables from action_button_helper here #}
{{ restore('action_button_helper') }}

{% if templateButtons is iterable and templateButtons|length > 0 %}
    {{ buttonsAddFromTemplate(
        templateButtons|filter(v => attribute(v, 'key') is defined and v.key != 'close'),
        query,
        actionRoute,
        indexRoute,
        langVar,
        nameGetter,
        editAttr,
        routeVars,
        item,
        tooltip
    ) }}
{% endif %}

{# Check if `templateButtons` is iterable and has `close` defined #}
{% if templateButtons is iterable and attribute(templateButtons, 'close') is defined %}
    {% include '@MauticCore/Helper/button.html.twig' with {
        buttons: [
            {
                label: 'mautic.core.close_back'|trans({'%target%': targetLabel|default('mautic.core.close_back.fallback'|trans)}),
                size: 'xs',
                variant: 'tertiary',
                icon: 'ri-arrow-left-line',
                href: path(indexRoute, routeVars.close|default({})),
                attributes: {
                    'data-toggle': 'ajax',
                    'class': 'btn-back mb-lg'
                }
            }
        ]
    } %}
{% endif %}

<div class="std-toolbar btn-group">

    {{ buttonsRender(
        (
            '<button type="button" class="btn btn-primary btn-nospin dropdown-toggle btn-icon" data-toggle="dropdown" aria-expanded="false"><i class="ri-arrow-down-s-line"></i></button>\n'
            ~ '<ul class="dropdown-menu dropdown-menu-right" role="menu">'
        )
        , '</ul>'
    )|raw }}
</div>

{{ extraHtml|raw }}
