{% set target = target is defined ? target : '.page-list' %}
{% if checkall is defined and checkall is not empty %}
{{ buttonReset(
    constant('Mautic\\CoreBundle\\Twig\\Helper\\ButtonHelper::LOCATION_BULK_ACTIONS'),
    constant('Mautic\\CoreBundle\\Twig\\Helper\\ButtonHelper::TYPE_DROPDOWN')
    ) }}

    {{- include('@MauticCore/Helper/action_button_helper.html.twig') -}}
    {# Workaround to get variables from action_button_helper here #}
    {{ restore('action_button_helper') }}

    {% if templateButtons.delete is defined and templateButtons.delete is not empty %}
        {{ buttonAdd({
            confirm: {
                message: translatorHasId(translationBase ~ '.form.confirmbatchdelete')
                    ? (translationBase ~ '.form.confirmbatchdelete')|trans
                    : 'mautic.core.form.confirmbatchdelete'|trans,
                confirmAction: path(actionRoute, query|merge({objectAction: 'batchDelete'})),
                template: 'batchdelete'
            },
            priority: -1
        }) }}
    {% endif %}

    <div class="dropdown ml-xs">
        {% include '@MauticCore/Helper/button.html.twig' with {
            buttons: [
                {
                    label: 'mautic.core.options',
                    size: 'sm',
                    variant: 'ghost',
                    icon: 'ri-more-2-line',
                    icon_only: true,
                    spin: false,
                    attributes: {
                        'class': 'dropdown-toggle',
                        'data-toggle': 'dropdown',
                        'type': 'button',

                    }
                }
            ]
        } %}
        <ul class="pull-{{ pull }} page-list-actions dropdown-menu" role="menu">
            {{ buttonsRender() }}
        </ul>
    </div>
{% endif %}
